Release history for katriawm

v21.01  2021-01-17
  [Fixed]
  - Build works with OpenBSD Make.

v20.09  2020-09-29
  [Fixed]
  - Docs: No longer link to discontinued "infofeld", but use
    "infofeld2".

  [Changed]
  - core/theme.h is now considered a build artifact and will be removed
    by "make clean". This file was never meant to be edited manually.
  - The font now has to be specified in config.h.

  [Added]
  - Theme "borg". Green, red, gray, black. A bit futuristic.
  - Theme "dark".
  - The desired theme can be selected more easily via "make THEME=...".
  - Bevelbar arguments have been added to some themes as a suggestion.
  - Rules can enforce a window title.

v20.08  2020-08-29
  [Fixed]
  - Fix more focus issues. We should now be fine if a window uses
    override_redirect, steals focus, and then quits. Before this change,
    we would fail to return focus to the previously focused (regular)
    window.

v20.07  2020-07-19
  [Fixed]
  - XGetWindowProperty() is now called according to manpage:
    "long_length: Specifies the length in 32-bit multiples of the data
    to be retrieved." We used to use much bigger values. If this leads
    to broken EWMH hints, please report.
  - Build no longer depends on GNU sed.

  [Added]
  - We now create the property _KATRIA_INSETS on the root window. It is
    our equivalent of _NET_WORKAREA. Mainly useful for xpointerbarrier.

v20.06  2020-06-20
  [Fixed]
  - Documentation: HOW-TO-SETUP.md had wrong "git clone" lines.

  [Changed]
  - Documentation: Recommend nhkd instead of sxhkd, because you need to
    go back to an old and unsupported version when using sxhkd (0.5.5).

v20.05  2020-05-15
  [Changed]
  - Makefile: We now use pkg-config for better portability.

  [Added]
  - The "modern" theme is back in a slightly tweaked form: The border of
    selected or urgent windows is a bit brighter now.

v19.11  2019-11-02
  [Added]
  - In client rules, "workspace" can be set to the special value -2,
    which will use the currently active workspace on the target monitor.

v18.09  2018-09-23
  [Added]
  - The "decorated" flag has been added to client rules. You can now
    force windows to be decorated or undecorated.

v18.06  2018-06-24
  [Fixed]
  - Deal with new warnings of GCC 8.1.

  [Changed]
  - The project has moved away from GitHub, thus changing a lot of
    links in the documentation.

v18.05  2018-05-06
  - Minor maintenance release. No user-visible changes, just some
    documentation tweaks. I just wanted a clean state. :-)

v17.10  2017-10-28
  [Fixed]
  - We now use XRRGetMonitors(). In contrast to XRRGetScreenResources(),
    it does not cause the X server to hang for a few hundred
    milliseconds.
  - There was a potential crash if your XRandR reported no active
    monitors. This *can* happen during reconfiguration of your monitor
    layout.

  [Added]
  - A new layout has been added: "Stack". It simply stacks all clients
    vertically. This layout can be useful when dealing with clients that
    produce wide output, for example when "tail -f"-ing multiple log
    files.

v17.09  2017-09-16
  [LICENSING]
  - The project has been relicensed under the MIT license (more
    precisely called "Expat License", but everyone calls it "MIT
    license" these days).

v17.05  2017-05-25
  [Fixed]
  - Moving the selected client to another workspace no longer breaks the
    function "switch to recent workspace".

  [Changed]
  - Urgency hints can now be temporarily "ignored" by katriawm, meaning
    there won't be any visual indicators showing urgency.

    This changes the format of the property _KATRIA_STATE on the root
    window!

  - katriabi now prints an actual error message if the size of
    _KATRIA_STATE doesn't match what it expects. This used to be a debug
    message, which is not helpful.

v17.04  2017-04-08
  [Fixed]
  - Aspect ratio size hints: We now only *shrink* windows when
    correcting the aspect ratio (if a certain aspect ratio is requested
    by a client). This fixes a bug where floating windows were larger
    than the screen after they have been maximized.

v17.02  2017-02-26
  [Changed]
  - All code specific to lemonbar has been removed, since it has been
    unmaintained for over a year.

  [Added]
  - The tutorial HOW-TO-SETUP.md has been added.

v16.12  2016-12-31
  - Minor maintenance release. No user-visible changes. I just wanted a
    clean start for 2017. :-)

v16.10  2016-10-29
  [Fixed]
  - Fix data corruption and possible crash when a client, which is
    currently being moved by the mouse, disappears.
  - Un-fullscreening clients now causes the current workspace to be
    rearranged. This fixes several bugs where you ended up with a
    "broken" tiled layout after un-fullscreening a client.

v16.09  2016-09-24
  [Fixed]
  - Limit the minimum size of windows: They can no longer be so small
    that there is not enough room left for the decorations to be drawn.
    This fixes black artifacts on tiny windows.
  - We no longer try to "optimize" the detection of changes to the
    screen layout. This fixes bugs where katriawm indeed missed some of
    these changes.

  [Changed]
  - Theming: The "tinting" model has been removed. Instead, each window
    state (normal, selected, urgency flag set) now requires one
    individual image. This means that you can use the full RGB color
    range for each state.
  - The "modern" theme has been removed (or rather, not ported to the
    new theming system).

  [Added]
  - Window titles can now be centered horizontally, see "center_title"
    in config.h.
  - _MOTIF_WM_HINTS is now evaluated (partially). We check for the
    "undecorated" hint.

v16.05  2016-05-01
  [Fixed]
  - Fix more focus issues. When "no window" is to be focused, we now
    transfer focus to an invisible window instead of to the root window.
    Especially, some VTE terminals are no longer confused about having
    focus. Sometimes, they have drawn a solid cursor instead of a hollow
    one.

  [Added]
  - "default_layout" was added to config.h.
  - Support _NET_SUPPORTING_WM_CHECK.

v16.02  2016-02-01
  [Fixed]
  - Less flickering when changing workspaces on the same monitor.
  - Less flickering when mapping new windows.
  - Unhiding already visible clients is now a no-op. This fixes a bug
    when moving clients to other workspaces.
  - Floaters will be re-fit to their monitor when changing workspaces.
    We don't want floaters to float away too far ... :-)
  - Floating clients can resize themselves. This is considered a "fix"
    since there are some dialog windows which rely on this (e.g.
    Inkscape or Firefox/GTK+3).

  [Added]
  - EWMH fullscreen hint honoured when windows are being mapped (instead
    of only responding to ClientMessages asking for fullscreen mode
    *after* the window has been mapped).
  - ICCCM size hints (increments, aspect ratio, min/max size) are now
    being honoured by floating windows.
  - Initial workspaces can be configured in config.h.
  - katriabi can produce output suitable for bevelbar.

  [Changed]
  - y offset and height taken into account when sorting monitors, the
    same way lemonbar sorts monitors.

v16.01  2016-01-08
  [Fixed]
  - A bar will now be notified when a different monitor has been
    selected.

  [Changed]
  - When floating clients are larger than the work area, we try to make
    the upper left corner visible.
  - Reworked theme "modern".
  - Maintainers: The Makefile is now located in "src/".
  - "state_to_lemonbar.sh" has been replaced with a more portable tool
    written in C.
  - Theming:
    - No need for ImageMagick anymore.
    - Minor file name changes, incompatible though.

  [Added]
  - Bar info tool:
    - Workspaces can be suffixed.
    - Current monitor indicated by styling the layout icon differently.
  - Set class hint "Katriawm/decoration" on decoration windows, so tools
    like compton can ignore them.
  - ICCCM size hints: Requests for a fixed size are being honoured.

Milestone 3  2016-01-03
  [Fixed]
  - Critical: Fix "use after free" when a client terminates or unmaps.
  - More robust against nonsensical data received from the IPC client.
    In other words: Added various out-of-bounds checks.
  - Fix focus issues with suckless tabbed after changing workspaces or
    monitors.

  [Changed]
  - On startup, the pointer is now warped to the selected monitor.
  - DestroyNotify events are now ignored.
  - We now always unmap windows on UnmapNotify as suggested by ICCCM.
  - Refuse to switch workspace or monitor if it's already selected.
  - The number of available save slots has been reduced to eight.

  [Added]
  - Support for ICCCM input focus models and WM_TAKE_FOCUS.
  - Support for ICCCM WM_STATE.
  - IPC calls:
    - Center currently selected floating client
    - Maximize currently selected floating client
    - Collect floating clients, i.e. fit them to current monitor
  - Currently selected monitor index is published in the root window
    property _KATRIA_STATE and will be displayed in lemonbar.
  - Occupied save slots are published in t he root window property
    _KATRIA_STATE and will be displayed in lemonbar.

Milestone 2  2016-01-01
  [Fixed]
  - Moving and resizing works when pointer over decorations.
  - Floating windows don't appear on the wrong monitor after XRandR
    changes.
  - Fix focus issues: Kick last remains of sloppy focus.
  - Fullscreen mode now works properly.
  - Duplicate monitors (i.e., monitors with the same x, y offset and
    same width, height) are now ignored. These areas act like they are
    one single monitor.
  - Fix: When clients spawn on an invisible workspace, they are now
    focus-able.

  [Changed]
  - Motif theme is "lighter".
  - Workspace indexes begin at 0, default workspace is 1.
  - Selecting monitors wraps around.
  - Tiling layout has "useless gaps" by default and acts more like a
    grid than traditional master/slave tiling.

  [Added]
  - Application rule matching in config.h.
  - IPC calls: "Toggle floating" and "clear all visible urgency hints".
  - Save slots.

Milestone 1  2015-12-30
  [Added]
  - Tiling, floating.
  - Workspaces.
  - Window decorations including title bars.
  - Focus history, click-to-focus and click-to-raise.
  - XRandR support including detection of changes at runtime.
  - Master (the actual WM) and client with a lot of basic IPC calls.
  - Publishing the internal state for external bars/pagers.
  - EWMH: Fullscreen and some window types.
  - Handle transients.
  - Non-reparenting.
  - Manpages.
